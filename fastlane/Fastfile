# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Build Example App Continuous"
  lane :continuous do
    gradle(
      task: "assemble",
      build_type: "Release"
    )
  end

  desc "Runs all the tests"
  lane :test do
      changelog = changelog_from_git_commits(
          between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || "HEAD^^^^^", "HEAD"],
          pretty: "- %s"
      )
      Actions.lane_context[SharedValues::FL_CHANGELOG] = changelog

      build_number = number_of_commits.to_s
      ENV["BUILD_NUMBER"] = build_number

      gradle(task: "test")

      automated_test_emulator_run(
        AVD_setup_path: "fastlane/AVD/AVD_setup.json",
        gradle_task: "connectedAndroidTest",
        AVD_param_launch_timeout: "120"
      )

      gradle(task: "dokka")

      slack(
        message: "Frollo Android SDK Continuous #" + build_number.to_s + " Successfully Integrated!",
        success: true,
        payload: {
         "Jenkins" => "Build #" + ENV['BUILD_NUMBER'] + " - " + ENV['BUILD_URL'],
         "Changelog" => changelog,
        },
        default_payloads: [:git_branch, :git_author, :lane, :test_result, :last_git_commit_message]
      )
  end

  error do |lane, exception|
    slack(
       message: "Frollo Android SDK Failed Integration.",
       success: false,
       payload: {
        "Jenkins" => ENV['JOB_NAME'] + " Build #" + ENV['BUILD_NUMBER'] + " - " + ENV['BUILD_URL'],
        "Error" => exception.message,
        "Changelog" => Actions.lane_context[SharedValues::FL_CHANGELOG],
       },
       default_payloads: [:git_branch, :git_author, :lane, :test_result, :last_git_commit_message]
    )
  end

end
